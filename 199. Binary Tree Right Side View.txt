199. Binary Tree Right Side View
Medium
10.6K
662
Companies
Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

 

Example 1:


Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]
Example 2:

Input: root = [1,null,3]
Output: [1,3]
Example 3:

Input: root = []
Output: []
 

Constraints:

The number of nodes in the tree is in the range [0, 100].
-100 <= Node.val <= 100
***************************************************************************************************************************
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new LinkedList<Integer>();
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        Queue<Integer> l = new LinkedList<Integer>();
        if (root == null) {
            return result;
        }
        q.add(root);
        l.add(1);
        while (q.size() > 0) {
            TreeNode node = q.poll();
            int level = l.poll();
            if (l.size() == 0 || l.peek() != level) {
                result.add(node.val);
            }
            if (node.left != null) {
                q.add(node.left);
                l.add(level + 1);
            }
            if (node.right != null) {
                q.add(node.right);
                l.add(level + 1);
            }
        }
        return result;
    }
}
***********************************************************************